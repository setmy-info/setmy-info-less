/* Mixins for setmy-info-less Enhanced
 * Provides reusable mixins for responsive design, theming, and common patterns
 */

// =============================================================================
// RESPONSIVE DESIGN MIXINS
// =============================================================================

// Mobile-first responsive breakpoint mixin
.responsive(@breakpoint; @rules) {
    @media (min-width: @breakpoint) {
        @rules();
    }
}

// Max-width responsive mixin (desktop-first)
.responsive-down(@breakpoint; @rules) {
    @media (max-width: (@breakpoint - 1px)) {
        @rules();
    }
}

// Between breakpoints mixin
.responsive-between(@min-breakpoint; @max-breakpoint; @rules) {
    @media (min-width: @min-breakpoint) and (max-width: (@max-breakpoint - 1px)) {
        @rules();
    }
}

// Specific breakpoint mixins for convenience
.sm(@rules) {
    .responsive(@breakpoint-sm; @rules);
}

.md(@rules) {
    .responsive(@breakpoint-md; @rules);
}

.lg(@rules) {
    .responsive(@breakpoint-lg; @rules);
}

.xl(@rules) {
    .responsive(@breakpoint-xl; @rules);
}

.xxl(@rules) {
    .responsive(@breakpoint-2xl; @rules);
}

// Mobile-only mixin
.mobile-only(@rules) {
    .responsive-down(@breakpoint-sm; @rules);
}

// Tablet and up mixin
.tablet-up(@rules) {
    .responsive(@breakpoint-md; @rules);
}

// Desktop and up mixin
.desktop-up(@rules) {
    .responsive(@breakpoint-lg; @rules);
}

// =============================================================================
// THEME MIXINS
// =============================================================================

// Apply styles only in light theme
.light-theme(@rules) {
    .theme-light &,
    [data-theme="light"] &,
    :root:not([data-theme]) & {
        @media (prefers-color-scheme: light) {
            @rules();
        }
    }

    :root:not([data-theme]) & {
        @media (prefers-color-scheme: light), (prefers-color-scheme: no-preference) {
            @rules();
        }
    }
}

// Apply styles only in dark theme
.dark-theme(@rules) {
    .theme-dark &,
    [data-theme="dark"] & {
        @rules();
    }

    @media (prefers-color-scheme: dark) {
        :root:not([data-theme]) & {
            @rules();
        }
    }
}

// Theme-aware color mixin
.theme-color(@property;
@light-color; @dark-color) {
        @{property}: @light-color;

    .dark-theme({
            @{property}: @dark-color;
    });
}

// =============================================================================
// LAYOUT MIXINS
// =============================================================================

// Flexbox center mixin
.flex-center() {
    display: flex;
    align-items: center;
    justify-content: center;
}

// Flexbox column center mixin
.flex-column-center() {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

// Absolute center mixin
.absolute-center() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// Full size mixin
.full-size() {
    width: 100%;
    height: 100%;
}

// Square aspect ratio mixin
.square(@size) {
    width: @size;
    height: @size;
}

// Circle mixin
.circle(@size) {
    .square(@size);
    border-radius: 50%;
}

// Container mixin with max-width and centering
.container(@max-width: @container-xl; @padding: @spacing-4) {
    width: 100%;
    max-width: @max-width;
    margin-left: auto;
    margin-right: auto;
    padding-left: @padding;
    padding-right: @padding;
}

// Grid container mixin
.grid-container(@columns: 12; @gap: @spacing-4) {
    display: grid;
    grid-template-columns: repeat(@columns, 1fr);
    gap: @gap;
}

// =============================================================================
// TYPOGRAPHY MIXINS
// =============================================================================

// Text truncation mixin
.truncate() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Multi-line text truncation mixin
.line-clamp(@lines: 2) {
    display: -webkit-box;
    -webkit-line-clamp: @lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

// Screen reader only text mixin
.sr-only() {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

// Responsive font size mixin using clamp()
.responsive-font-size(@min-size; @preferred-size; @max-size) {
    font-size: @min-size;
    font-size: clamp(@min-size, @preferred-size, @max-size);
}

// Heading mixin with responsive sizing
.heading(@level: 1) {
    font-weight: @font-weight-bold;
    line-height: @line-height-tight;

    & when (@level = 1) {
        .responsive-font-size(@font-size-2xl; 4vw; @font-size-5xl);
    }
    & when (@level = 2) {
        .responsive-font-size(@font-size-xl; 3vw; @font-size-4xl);
    }
    & when (@level = 3) {
        .responsive-font-size(@font-size-lg; 2.5vw; @font-size-3xl);
    }
    & when (@level = 4) {
        .responsive-font-size(@font-size-base; 2vw; @font-size-2xl);
    }
    & when (@level = 5) {
        .responsive-font-size(@font-size-sm; 1.5vw; @font-size-xl);
    }
    & when (@level = 6) {
        .responsive-font-size(@font-size-xs; 1vw; @font-size-lg);
    }
}

// =============================================================================
// BUTTON MIXINS
// =============================================================================

// Base button mixin
.button-base() {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid transparent;
    font-weight: @font-weight-medium;
    text-decoration: none;
    cursor: pointer;
    transition: @transition-colors;
    user-select: none;

    &:focus {
        outline: 2px solid var(--color-primary);
        outline-offset: 2px;
    }

    &:disabled {
        opacity: var(--opacity-disabled);
        cursor: not-allowed;
    }
}

// Button size variants
.button-sm() {
    padding: @spacing-1-5 @spacing-3;
    font-size: @font-size-sm;
    border-radius: @border-radius-sm;
}

.button-md() {
    padding: @spacing-2-5 @spacing-4;
    font-size: @font-size-base;
    border-radius: @border-radius-md;
}

.button-lg() {
    padding: @spacing-3 @spacing-6;
    font-size: @font-size-lg;
    border-radius: @border-radius-lg;
}

// Button color variants
.button-primary() {
    background-color: var(--color-primary);
    color: white;

    &:hover:not(:disabled) {
        background-color: var(--color-primary-hover);
    }

    &:active:not(:disabled) {
        background-color: var(--color-primary-active);
    }
}

.button-secondary() {
    background-color: var(--color-background-secondary);
    color: var(--color-text-primary);
    border-color: var(--color-border-primary);

    &:hover:not(:disabled) {
        background-color: var(--color-background-tertiary);
    }
}

.button-outline() {
    background-color: transparent;
    color: var(--color-primary);
    border-color: var(--color-primary);

    &:hover:not(:disabled) {
        background-color: var(--color-primary);
        color: white;
    }
}

// =============================================================================
// FORM MIXINS
// =============================================================================

// Base form control mixin
.form-control() {
    display: block;
    width: 100%;
    padding: @spacing-2-5 @spacing-3;
    font-size: @font-size-base;
    line-height: @line-height-normal;
    color: var(--color-text-primary);
    background-color: var(--color-background-primary);
    border: 1px solid var(--color-border-primary);
    border-radius: @border-radius-md;
    transition: @transition-colors;

    &:focus {
        outline: none;
        border-color: var(--color-primary);
        box-shadow: 0 0 0 3px fade(var(--color-primary), 10%);
    }

    &:disabled {
        opacity: var(--opacity-disabled);
        cursor: not-allowed;
    }

    &::placeholder {
        color: var(--color-text-tertiary);
    }
}

// Form group mixin
.form-group(@margin-bottom: @spacing-4) {
    margin-bottom: @margin-bottom;
}

// Form label mixin
.form-label() {
    display: block;
    margin-bottom: @spacing-1;
    font-weight: @font-weight-medium;
    color: var(--color-text-primary);
}

// =============================================================================
// CARD MIXINS
// =============================================================================

// Base card mixin
.card() {
    background-color: var(--color-background-elevated);
    border: 1px solid var(--color-border-primary);
    border-radius: @border-radius-lg;
    box-shadow: var(--shadow-sm);
    overflow: hidden;
}

// Card with hover effect
.card-interactive() {
    .card();
    transition: @transition-default;
    cursor: pointer;

    &:hover {
        box-shadow: var(--shadow-md);
        transform: translateY(-1px);
    }
}

// Card padding variants
.card-padding-sm() {
    padding: @spacing-4;
}

.card-padding-md() {
    padding: @spacing-6;
}

.card-padding-lg() {
    padding: @spacing-8;
}

// =============================================================================
// ANIMATION MIXINS
// =============================================================================

// Fade in animation
.fade-in(@duration: @transition-duration-300) {
    animation: fadeIn @duration @transition-timing-ease-out;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

// Slide up animation
.slide-up(@duration: @transition-duration-300; @distance: 20px) {
    animation: slideUp @duration @transition-timing-ease-out;
}

@keyframes slideUp {
    from {
        opacity: 0;
        transform: translateY(@distance);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

// Scale animation
.scale-in(@duration: @transition-duration-200) {
    animation: scaleIn @duration @transition-timing-ease-out;
}

@keyframes scaleIn {
    from {
        opacity: 0;
        transform: scale(0.95);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

// Pulse animation
.pulse(@duration: @transition-duration-1000) {
    animation: pulse @duration @transition-timing-ease-in-out infinite;
}

@keyframes pulse {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0.5;
    }
}

// =============================================================================
// UTILITY MIXINS
// =============================================================================

// Clearfix mixin
.clearfix() {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

// Hide element visually but keep it accessible
.visually-hidden() {
    .sr-only();
}

// Show element for screen readers only
.show-for-sr() {
    .sr-only();
}

// Reset list styles
.list-reset() {
    list-style: none;
    padding: 0;
    margin: 0;
}

// Reset button styles
.button-reset() {
    background: none;
    border: none;
    padding: 0;
    margin: 0;
    font: inherit;
    color: inherit;
    cursor: pointer;
}

// Focus ring mixin
.focus-ring(@color: var(--color-primary)) {
    &:focus {
        outline: 2px solid @color;
        outline-offset: 2px;
    }
}

// Modern focus styles using :focus-visible
.focus-visible(@color: var(--color-primary)) {
    &:focus-visible {
        outline: 2px solid @color;
        outline-offset: 2px;
    }

    &:focus:not(:focus-visible) {
        outline: none;
    }
}

// =============================================================================
// PRINT MIXINS
// =============================================================================

// Print-only styles
.print-only(@rules) {
    @media print {
        @rules();
    }
}

// Hide from print
.print-hidden() {
    @media print {
        display: none !important;
    }
}

// Print-friendly colors
.print-friendly() {
    @media print {
        background: white !important;
        color: black !important;
        box-shadow: none !important;
    }
}

